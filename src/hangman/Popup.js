import React, { useEffect, useRef } from 'react'
import { Button, OverlayTrigger, Popover } from 'react-bootstrap'
import { useNavigate } from 'react-router-dom'
import { checkWin } from '../hangman/helpers/helpers'
import { CALCULATORWORK } from './../consts/paths'

const Popup = ({
    correctLetters,
    wrongLetters,
    selectedWord,
    setPlayable,
    playAgain,
}) => {
    let finalMessage = ''
    let finalButtonMessage = ''
    let playable = true
    let buttonClick = playAgain

    const navigate = useNavigate()

    let ref = useRef(true)

    if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {
        finalMessage =
            '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –¥–æ—à–µ–ª –¥–æ —Å–∞–º–æ–≥–æ –∫–æ–Ω—Ü–∞ –∏ –¥–æ—Å—Ç–æ–µ–Ω —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –æ—Ç–≤–µ—Ç üòÉ'
        playable = false
        finalButtonMessage = '–£–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç'
        buttonClick = () => navigate(CALCULATORWORK)
        ref = true
    } else if (
        checkWin(correctLetters, wrongLetters, selectedWord) === 'lose'
    ) {
        finalMessage = '–ú–æ–∂–µ—Ç –≤—Å–µ —Ç–∞–∫–∏ –ø–æ—Å—á–∏—Ç–∞–µ—à—å –≤ —É–º–µ? –ó–∞—á–µ–º —Ç–µ–±–µ –≤—Å–µ —ç—Ç–æ?'
        playable = false
        finalButtonMessage = '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑'
        buttonClick = playAgain
        ref = false
    }

    useEffect(() => {
        setPlayable(playable)
    })

    const popover = (
        <Popover id='popover-basic'>
            <Popover.Header className='text-center' as='h3'>
                –¢—É—Ç —Ç–∞–∫–æ–µ –¥–µ–ª–æ
            </Popover.Header>
            <Popover.Body>
                –Ø —É–∂–µ –ø–æ–¥–∑–∞–±—ã–ª –æ—Ç–≤–µ—Ç, –ø–æ—á–µ–º—É –±—ã —Ç–µ–±–µ —Å–∞–º–æ–º—É –Ω–µ –ø–æ—Å—á–∏—Ç–∞—Ç—å –µ–≥–æ –Ω–∞
                –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ?
            </Popover.Body>
            <Button
                className='d-block mx-auto mb-2'
                variant='dark'
                onClick={buttonClick}
            >
                –ü–æ—Å—á–∏—Ç–∞—Ç—å
            </Button>
        </Popover>
    )

    return (
        <div
            className='popup-container'
            style={finalMessage !== '' ? { display: 'flex' } : {}}
        >
            <div className='popup'>
                <h2>{finalMessage}</h2>
                {ref ? (
                    <OverlayTrigger
                        trigger='click'
                        placement='right'
                        overlay={popover}
                    >
                        <button>{finalButtonMessage}</button>
                    </OverlayTrigger>
                ) : (
                    <button onClick={buttonClick}>{finalButtonMessage}</button>
                )}
            </div>
        </div>
    )
}

export default Popup
